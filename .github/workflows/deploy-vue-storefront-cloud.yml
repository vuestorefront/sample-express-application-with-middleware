name: Deploy to Vue Storefront Cloud
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ secrets.PROJECT_NAME }}-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL || 'registry.vuestorefront.cloud' }}
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: "--compress"
          buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASS: ${{ secrets.NPM_PASS }}
          NPM_USER: ${{ secrets.NPM_USER }}
          NPM_REGISTRY: "https://registrynpm.storefrontcloud.io"

      - name: Build and publish docker image (middleware)
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ secrets.PROJECT_NAME }}-storefrontcloud-io/vue-storefront-middleware:${{ github.sha }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL || 'registry.vuestorefront.cloud' }}
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/middleware.Dockerfile
          buildoptions: "--compress"
          buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASS: ${{ secrets.NPM_PASS }}
          NPM_USER: ${{ secrets.NPM_USER }}
          NPM_REGISTRY: "https://registrynpm.storefrontcloud.io"

  deployment-app:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      uses: fjogeleit/http-request-action@v1
      with:
        url: '${{ secrets.PLATFORM_API_URL }}/cloud/instances/${{ secrets.PROJECT_NAME }}-${{ secrets.CLOUD_REGION }}-gcp-storefrontcloud-io/deploy'
        method: 'PATCH'
        customHeaders: '{"Content-Type":"application/json"}'
        data: '{ "cloudUserId": "${{ secrets.CLOUD_USERNAME }}", "cloudUserPassword": "${{ secrets.CLOUD_PASSWORD }}", "dockerImageHash": "${{ github.sha }}" }'

  deployment-middleware:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      uses: fjogeleit/http-request-action@v1
      with:
        url: '${{ secrets.CLOUD_API_BASE_URL }}/instance/${{ secrets.PROJECT_NAME }}-europe-west1-gcp-storefrontcloud-io'
        method: 'PUT'
        customHeaders: '{"Content-Type":"application/json", "X-Api-Key":"${{ secrets.CLOUD_PASSWORD }}", "X-User-Id":"${{ secrets.CLOUD_USERNAME }}"}'
        data: '{ "front_version": "${{ github.sha }}", "additional_apps": { "apps": [ { "name": "middleware", "tag": "${{ github.sha }}", "image": "${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.PROJECT_NAME }}-storefrontcloud-io/vue-storefront-middleware", "path": "/api/", "port": "3000", "has_base_path": false } ], "enabled": true } }'
